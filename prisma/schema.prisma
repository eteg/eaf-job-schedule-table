generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Blocked {
  id         Int      @default(autoincrement())
  created_at DateTime @default(now())
  cpf        String

  @@ignore
}

model Capacity {
  id         Int      @id @default(autoincrement())
  total      Int
  current    Int
  partnerId  Int
  created_at DateTime @default(now())
  city       String
  day        String
  Partner    Partner  @relation(fields: [partnerId], references: [id])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model City {
  id         Int      @default(autoincrement())
  name       String
  created_at DateTime @default(now())
  state      String

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Log {
  id            Int      @default(autoincrement())
  ticket_status String?
  ticket_reason String
  ticket_date   String
  ticket_hour   String
  http_status   String
  ticketId      Int
  partnerId     Int
  origin        String
  method        String
  created_at    DateTime @default(now())

  @@ignore
}

model Partner {
  id             Int        @id @default(autoincrement())
  created_at     DateTime   @default(now())
  name           String
  token          String?
  url            String?
  authentication String?
  Capacity       Capacity[]
  Schedule       Schedule[]
}

model Schedule {
  id           Int      @id @default(autoincrement())
  day          String
  partnerId    Int
  created_at   DateTime @default(now())
  city         String
  ticketId     String?
  cod_familiar String?
  cpf          String?
  Partner      Partner  @relation(fields: [partnerId], references: [id])
}
